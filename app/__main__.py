print(
    "\n"
    "This is an application that can be used to approximate the partition "
    "function of quantum Ising models. Below is a list of all submodules that "
    "can be executed. Each submodule should be run using "
    "`python -m app.[module name]`. Use `python -m app.[module name] -h` to "
    "view a help page with command line arguments for a specific submodule.\n\n"
    "converter.ising_to_wcnf            Convert an Ising model to a weighted CNF formula\n"
    "converter.matrix_estimation        Approxiomate a quantum Ising model using matrix exponential estimation\n"
    "converter.quantum_ising_to_ising   Approximate a quantum Ising model using a classical Ising model\n"
    "experiments.*                      Several experiments can be run. See the `app/experiments` folder for all experiments\n"
    "generator.ising.random_graph       Generate an Ising model on a random graph with random weights\n"
    "generator.ising.square_lattice     Generate an Ising model on a square lattice with random weights\n"
    "generator.quantum_ising.line       Generate a 1D quantum Ising model on a line or ring with random weights\n"
    "ising                              Parse an Ising model JSON file and optioanlly calculate the partition function using brute force\n"
    "quantum_ising                      Parse a quantum Ising model JSON file and optionally calculate the Hamiltonian and parition function using brute force\n"
    "wcnf                               Parse JSON weighted CNF files and convert them to other formats\n"
    "wcnf.solver                        Runs a solver on a weighted CNF JSON file\n"
)